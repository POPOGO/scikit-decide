(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{504:function(t,e,o){"use strict";o.r(e);var n=o(51),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"utils"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#utils"}},[t._v("#")]),t._v(" utils")]),t._v(" "),o("p",[t._v("This module contains utility functions.")]),t._v(" "),o("p"),o("div",{staticClass:"table-of-contents"},[o("ul",[o("li",[o("a",{attrs:{href:"#rollout"}},[t._v("rollout")])])])]),o("p"),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),o("skdecide-summary")],1),t._v(" "),o("h2",{attrs:{id:"rollout"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#rollout"}},[t._v("#")]),t._v(" rollout")]),t._v(" "),o("skdecide-signature",{attrs:{name:"rollout",sig:{params:[{name:"domain",annotation:"Domain"},{name:"solver",default:"None",annotation:"Optional[Solver]"},{name:"from_memory",default:"None",annotation:"Optional[D.T_memory[D.T_state]]"},{name:"from_action",default:"None",annotation:"Optional[D.T_agent[D.T_concurrency[D.T_event]]]"},{name:"num_episodes",default:"1",annotation:"int"},{name:"max_steps",default:"None",annotation:"Optional[int]"},{name:"render",default:"True",annotation:"bool"},{name:"max_framerate",default:"None",annotation:"Optional[float]"},{name:"verbose",default:"True",annotation:"bool"},{name:"action_formatter",default:"<lambda function>",annotation:"Optional[Callable[[D.T_event], str]]"},{name:"outcome_formatter",default:"<lambda function>",annotation:"Optional[Callable[[EnvironmentOutcome], str]]"},{name:"save_result_directory",default:"None",annotation:"str"}],return:"None"}}}),t._v(" "),o("p",[t._v("This method will run one or more episodes in a domain according to the policy of a solver.")]),t._v(" "),o("h4",{attrs:{id:"parameters"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),o("ul",[o("li",[o("strong",[t._v("domain")]),t._v(": The domain in which the episode(s) will be run.")]),t._v(" "),o("li",[o("strong",[t._v("solver")]),t._v(": The solver whose policy will select actions to take (if None, a random policy is used).")]),t._v(" "),o("li",[o("strong",[t._v("from_memory")]),t._v(": The memory or state to consider as rollout starting point (if None, the domain is reset first).")]),t._v(" "),o("li",[o("strong",[t._v("from_action")]),t._v(": The last applied action when from_memory is used (if necessary for initial observation computation).")]),t._v(" "),o("li",[o("strong",[t._v("num_episodes")]),t._v(": The number of episodes to run.")]),t._v(" "),o("li",[o("strong",[t._v("max_steps")]),t._v(": The maximum number of steps for each episode (if None, no limit is set).")]),t._v(" "),o("li",[o("strong",[t._v("render")]),t._v(": Whether to render the episode(s) during rollout if the domain is renderable.")]),t._v(" "),o("li",[o("strong",[t._v("max_framerate")]),t._v(": The maximum number of steps/renders per second (if None, steps/renders are never slowed down).")]),t._v(" "),o("li",[o("strong",[t._v("verbose")]),t._v(": Whether to print information to the console during rollout.")]),t._v(" "),o("li",[o("strong",[t._v("action_formatter")]),t._v(": The function transforming actions in the string to print (if None, no print).")]),t._v(" "),o("li",[o("strong",[t._v("outcome_formatter")]),t._v(": The function transforming EnvironmentOutcome objects in the string to print (if None, no print).")]),t._v(" "),o("li",[o("strong",[t._v("save_result")]),t._v(": Directory in which state visited, actions applied and Transition Value are saved to json.")])])],1)}),[],!1,null,null,null);e.default=a.exports}}]);